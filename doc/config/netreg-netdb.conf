## NetReg Netdb Configuration
# This file sets options used by the NetReg web interface.

# The hostname of the server. Used as defaults throughout this file.
HOSTNAME = localhost

## Miscellaneous ###########################################################

# Used throughout the rest of this file and in support scripts to locate
# the 'bin' and 'etc' directories
NRHOME = /home/netreg

# The prefix for machines registered without a hostname. The format will be
# NETREG-[machine id].DOMAIN (where DOMAIN is required in the registration,
# but can be setup such that only one domain is permissible and thus default)
HN_PREFIX = NETREG-

# Path to your email submission program.
MAILER = /usr/lib/sendmail

# Whether or not NetReg should use transaction wrappers when performing some
# database operations. Much of the code was designed to operate even in the
# abscence of transactions, but if you are using MySQL/InnoDB tables, you
# should enable this option. Otherwise disable.
DBMS_XACTION = 0

# Recursion protection for the cascade update/delete checking code. Many of
# the NetReg tables do not use foreign key references, instead using code to
# track dependencies. This should only be changed from the value '10' if
# the database structure changes and an operation potentially involves tracking
# dependencies greater than 10 deep.
MAX_CASCADE_DEPTH = 10

# Whether non admins should be able to register machines with all
# numeric components.
VALIDATE_ALL_NUMERIC_HOSTNAMES = 0

## Error reporting ###########################################################
# The address and name to which automatic error reports from the system are
# sent.
ADMIN_ADDRESS = root@$HOSTNAME
ADMIN_NAME = NetReg Errors

# Email addresses to send reports of attempts to register stolen machines
STOLEN_ALERT_TO = $ADMIN_ADDRESS
STOLEN_ALERT_CC = $ADMIN_ADDRESS

# The sender address and name for the error reports
SENDER_ADDRESS = netreg@$HOSTNAME
SENDER_NAME = Network Registration

## Configuration File Distribution ##########################################
# The default configuration file scripts assume the use of RSYNC to distribute
# these files to the various DNS and DHCP servers under NetReg control. We
# set the following options to configure the rsync location and options.
# Notably, we configure the use of SSH for transport.

# Path to the rsync binary
RSYNC_PATH = /usr/bin/rsync

# General options to rsync. -a enables 'archive' mode (preserving the state of
# files as much as possible); -v adds verbosity to the output
RSYNC_OPTIONS = -a -v -v -v --rsync-path=$RSYNC_PATH

# The remote user to connect as. You'll need to setup this user with a home
# directory containing a ~user/.ssh/authorized_keys file with the public key
# of an SSH RSA/DSA keypair. The private key should be specified in
# RSYNC_RSH using the -i option
RSYNC_REM_USER = netreg

# The command rsync invokes to provide data transport. The private key of
# an RSA/DSA keypair should be stored in $NRHOME/etc/.identity-xfer
RSYNC_RSH = /usr/bin/ssh -1 -x -i $NRHOME/etc/.identity-xfer

## DHCP Options ##############################################################

# The place where DHCP configurations are generated.
DHCP_GENPATH = $NRHOME/etc/dhcp-gen

# The place where DHCP configurations are transferred from/to
DHCP_XFERPATH = $NRHOME/etc/dhcp-xfer

# Path to the DHCP omshell binary. Only required for QuickReg support.
DHCP_OMSHELL = /usr/bin/omshell

# Path to the current DHCP Lease file. This is uses with the optional leases search code
DHCP_CURRENT_LEASES = /var/lib/dhcpd/dhcpd.leases

# Deprecated in post-netreg-0.7 cvs builds (kevinm - 22 Sep 04)
# DHCP_SERVICE = $HOSTNAME
# DHCP_RR_DNS_SERV = 10.0.0.1
# DHCP_NSKEY = $NRHOME/etc/zone-config/dhcpd.conf.nsaux
# DHCP_DEF_LEASETIME = 86400

## DNS Options ##############################################################

# The place where DNS zone files are generated.
DNS_GENPATH = $NRHOME/etc/zone-gen

# The place where DNS zone files are distributed from (after copying from
# $DNS_GENPATH)
DNS_XFERPATH = $NRHOME/etc/zone-xfer

# The place where DNS server configurations are generated (also copied
# to $DNS_XFERPATH for distribution)
DNS_CONFPATH = $NRHOME/etc/zone-config

# Various paths on the DNS servers
DNS_TOP = /var/named

# The location of zone files
DNS_DBDIR = $DNS_TOP/db

# The location of DNS log files
DNS_VAR = $DNS_TOP/var

# The location of DNS admin binaries (e.g. named-checkconf)
DNS_SBIN = /usr/sbin

# The location of named.conf
DNS_ETC = /etc

# The email address that should receive DNS update reports
DNS_LOG_EMAIL = root@localhost

# Send updates to DNS for pool addresses
DNS_UPDATE_POOL_ADDR = 1

# The canonicalization function for DNS (e.g. lowercase all records)
DNS_CANON_FUNC = lc

## RADIUS Options ###########################################################

# Where radius files are generated:
RADIUS_GENPATH = $NRHOME/etc/radius-gen

# Where radius files are distributed:
RADIUS_XFERPATH = $NRHOME/etc/radius-xfer

# Monitoring account info to be placed into the generated radius users file:
RADIUS_MON_ACCT = $NRHOME/etc/.mon_acct


## UserMaint Options ########################################################

EXPIRE_OUTLET_TEMPLATE = $NRHOME/etc/expire_outlet.template
EXPIRE_OUTLET_SUBJECT = Network Registration outlet expiration notice
EXPIRE_MACHINE_TEMPLATE = $NRHOME/etc/expire_machine.template
EXPIRE_MACHINE_SUBJECT = Network Registration machine expiration notice

EXPIRE_EMAIL_FROM = netreg@$HOSTNAME
EXPIRE_EMAIL_FROM_NAME = Network Registration
EXPIRE_EMAIL_CC = root@$HOSTNAME
USERMAINT_SEND_EMAIL = 0


# THE place where DNS zone files are generated.
DNS_GENPATH = $NRHOME/etc/zone-gen

# The place where DNS zone files are distributed from (after copying from
# $DNS_GENPATH)
DNS_XFERPATH = $NRHOME/etc/zone-xfer

# The place where DNS server configurations are generated (also copied
# to $DNS_XFERPATH for distribution)
DNS_CONFPATH = $NRHOME/etc/zone-config

# Various paths on the DNS servers
DNS_TOP = /var/named

# The location of zone files
DNS_DBDIR = $DNS_TOP/db

# The location of DNS log files
DNS_VAR = $DNS_TOP/var

# The location of DNS admin binaries (e.g. named-checkconf)
DNS_SBIN = /usr/sbin

# The location of named.conf
DNS_ETC = /etc

## Services File Distribution ###############################################
# The place where the services file is generated ($SERVICE_FILE)
SERVICE_PATH = $NRHOME/etc/service-gen
SERVICE_FILE = $SERVICE_PATH/services.sif

# The place where the services file is copied for distribution to servers
# requiring it.
SERVICE_COPY = $NRHOME/etc/service-xfer/services.sif

## AuthBridge Configuration #################################################
# Disabled by default. AuthBridge is not required for NetReg to operate. 
# Configure these options only if you are configuring AuthBridge
# (from www.net.cmu.edu/authbridge)
# AUTHBRIDGE_SUSPEND = 1
# AUTHBRIDGE_CONFIG_FILE = $NRHOME/etc/authbridge-suspend.conf
# AUTHBRIDGE_DEL_COMMAND = DEL

## Database Connections #####################################################
# The profile used by scripts to connect to the database. This user should
# have full read/write access.
<DB-MAINT>
	# connect_string should be: family:dbtype:database:host
	connect_string = DBI:mysql:netdb:localhost
	username = netreg-maint
	# File containing the complete password.  If a newline exists in this file it
	# will be considerd part of the password.
	password_file = $NRHOME/etc/.password-maint
	# If you want to use a simple password here instead of storing it
	# in a file set this:
	# password = password-here
</DB-MAINT>

# The profile used by netreg report scripts. This user should have full read
# access (it does not need write access.)
<DB-REPORT>
        # connect_string should be: family:dbtype:database:host
        connect_string = DBI:mysql:netdb:localhost
        username = netreg-reports
        password_file = $NRHOME/etc/.password-report
</DB-REPORT>

## Database Dumping Configuration ###########################################
# Settings used by dump-db.pl to periodically dump the database for backup
# reasons.

<DUMP-DB>
	# The user that the database runs/dumps as.
	unix_file_owner = mysql
	
	# Careful.. changing the fields_terminated_by requires changing
	# the reload script, which is currently written from dump-db.pl
	# directly
	dump_command = /usr/bin/mysqldump --fields-terminated-by=\| -l --add-locks 

	# We dump to $dump_dir/$dbname-$date
	dump_dir = $NRHOME/archive

	# Where the .tgz's with data end up
	archive_dir = $NRHOME/archive

	# Number of days to keep dumps
	clean_time = 30
</DUMP-DB>


## Protection Profiles ######################################################

# Protection profiles define default sets of protections that are applied
# to different objects in the system. Using these profiles you can force
# certain groups to always be added to the protections when objects are added.

# The structure is fairly self-explanatory. Each defined entry can contain
# a level, set of permissions (e.g. 'READ,WRITE,ADD' or 'ADD') and the user
# or group id receiving such protections.

<PROTECTION_PROFILES>
	
	#  The default profile used in adding almost any object
	<admin_default_add>
			<entries>
				level = 9
				permission = ADD
				id = netreg:admins
			</entries>
		name = Admins May Use [Default]
	</admin_default_add>

	# The profile used when adding zones
	<zone_admin_default_add>
			<entries>
				level = 9
				permission = ADD
				id = netreg:admins
			</entries>
		name = Police Group May Use
	</zone_admin_default_add>

	# currently unused
	<all_users_add>
			<entries>
				level = 1
				permission = ADD
				id = system:anyuser
			</entries>
		name = All Users May Use
	</all_users_add>

	# The protections added when a machine is registered. Note that
	# %user% and %group% are substituted for the actual user and selected
	# group at registration time.
	<machine_reg_default>
			<entries>
				level = 1
				permission = READ,WRITE
				id = %user%
			</entries>
			<entries>
				level = 5
				permission = READ,WRITE
				id = %dept%
			</entries>
		name = Machine Registration Defaults
	</machine_reg_default>
</PROTECTION_PROFILES>

## History Queries #########################################################

# The "Show history" link has the ability to bring in related history for
# a record.  Which records are brought in is controlled by the HistoryQueries
# block


<HistoryQueries>
        # Each top level blocks referes to a table, in this case these entries
        # would effect history queries against the machine table.
        <machine>
                # Inner blocks refer to the table to join to the table being
                # queried.  In this case, getting changes to the dns_resource
                # table that refer to the row in the machine table being
                # queried.
                <dns_resource>
                        # The field in the secondary table that would contain the
                        # name of the main table being queried.  In this case
                        # the owner_type column in the dns_resource table would
                        # have the value 'machine', the name of the main table
                        # queried. If 'indicator' is either blank or not defined,
                        # then it is assumed that all rows in the secondary table
                        # refer to the main table, such as the
                        # trunkset_machine_presence table.
                        indicator = owner_type

                        # The column in the secondary table that matches the row
                        # id in the main table is passed in the tiq_row variable.
                        tiq_row = rname_tid
                </dns_resource>
                <dhcp_option>
                        indicator = type
                        tiq_row = tid
                </dhcp_option>
                <service_membership>
                        indicator = member_type
                        tiq_row = member_tid
                </service_membership>
                <trunkset_machine_presence>
                        indicator =
                        tiq_row = device
                </trunkset_machine_presence>
        </machine>
        <outlet>
                <outlet_vlan_membership>
                        tiq_row = outlet
                </outlet_vlan_membership>
        </outlet>
        <service>
                <service_membership>
                        indicator = 
                        tiq_row = service
                </service_membership>
                <attribute>
                        indicator = owner_table
                        tiq_row = owner_tid
                </attribute>
                <dns_resource>
                        indicator = owner_type
                        tiq_row = owner_tid
                </dns_resource>
                <dhcp_option>
                        indicator = type
                        tiq_row = tid
                </dhcp_option>
        </service>

</HistoryQueries>
